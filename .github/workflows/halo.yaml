name: Halo Workflow

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: ${{github.workflow}} - ${{github.ref}}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: production
      - name: Setup Environment
        uses: ./.github/actions/setup-env
      - name: Reset version of Halo
        if: github.event_name == 'release'
        shell: bash
        run: |
          # Set the version with tag name when releasing
          version=${{ github.event.release.tag_name }}
          version=${version#v}
          sed -i "s/version=.*-SNAPSHOT$/version=$version/1" gradle.properties
      - name: Build Halo
        run: ./gradlew clean && ./gradlew downloadPluginPresets && ./gradlew build -x check
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: halo-artifacts
          path: application/build/libs
          retention-days: 1

  docker-build-and-push:
    if: always() && needs.build.result == 'success'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: production
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: halo-artifacts
          path: application/build/libs

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
